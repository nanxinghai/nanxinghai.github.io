<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>使用SpringBoot+Jsoup做java简单&#39;爬虫&#39;</title>
      <link href="/2021/09/28/SpringBoot-Jsoup%E5%81%9Ajava%E7%AE%80%E5%8D%95-%E7%88%AC%E8%99%AB/"/>
      <url>/2021/09/28/SpringBoot-Jsoup%E5%81%9Ajava%E7%AE%80%E5%8D%95-%E7%88%AC%E8%99%AB/</url>
      
        <content type="html"><![CDATA[<h3 id="使用SpringBoot-Jsoup做java简单’爬虫’"><a href="#使用SpringBoot-Jsoup做java简单’爬虫’" class="headerlink" title="使用SpringBoot+Jsoup做java简单’爬虫’"></a>使用SpringBoot+Jsoup做java简单’爬虫’</h3><hr><h4 id="Jsoup简介"><a href="#Jsoup简介" class="headerlink" title="Jsoup简介"></a>Jsoup简介</h4><p>Jsoup是一款java的Html解析器，可以直接解析Html。针对网页提供了相关Api，可以通过Dom、Css、Jquery等属性来操作和解析网页。</p><hr><h4 id="主要类介绍："><a href="#主要类介绍：" class="headerlink" title="主要类介绍："></a>主要类介绍：</h4><ul><li>Jsoup 类提供了连接，清理和解析HTML文档的方法</li><li>Document 获取HTML文档</li><li>Element 获取、操作HTML节点</li></ul><h4 id="实战（爬京东网页数据）"><a href="#实战（爬京东网页数据）" class="headerlink" title="实战（爬京东网页数据）"></a>实战（爬京东网页数据）</h4><h5 id="1-创建Maven项目"><a href="#1-创建Maven项目" class="headerlink" title="1.创建Maven项目"></a>1.创建Maven项目</h5><h5 id="2-导入pom依赖"><a href="#2-导入pom依赖" class="headerlink" title="2.导入pom依赖"></a>2.导入pom依赖</h5><p>​    根据自己需求减少或增加依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--jsoup相关依赖--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.jsoup<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsoup<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.10.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--springbootweb包--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--springboot测试包--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="3-编写工具类（方便调用）"><a href="#3-编写工具类（方便调用）" class="headerlink" title="3.编写工具类（方便调用）"></a>3.编写工具类（方便调用）</h5><p>我这里写的比较简单，相关复杂设置可以去网上在搜一搜</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HtmlParseUtil</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 解析出网页的docment文档</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> keyword 网页需要变更的关键字</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> page  网页需要变更的页码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Document <span class="title">getDocment</span><span class="params">(String keyword,Integer page)</span></span>&#123;</span><br><span class="line">        <span class="comment">//拼接好url</span></span><br><span class="line">        String url = <span class="string">&quot;https://search.jd.com/Search?keyword=&quot;</span> + keyword + <span class="string">&quot;&amp;page=&quot;</span> +page;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// jsoup解析url，第二个参数是超时时间</span></span><br><span class="line">            Document document = Jsoup.parse(<span class="keyword">new</span> URL(url), <span class="number">9000</span>);</span><br><span class="line">            <span class="keyword">return</span> document;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="4-相关测试"><a href="#4-相关测试" class="headerlink" title="4.相关测试"></a>4.相关测试</h5><p>编写测试类，调用工具类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HtmlTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">HtmlParseTest</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">//使用工具类，这里本质就是在京东搜索keyword=java分页page=1</span></span><br><span class="line">        Document document = HtmlParseUtil.getDocment(<span class="string">&quot;java&quot;</span>, <span class="number">1</span>);</span><br><span class="line"><span class="comment">//获取文档中class为gl-warp clearfix的节点集合</span></span><br><span class="line">        Elements elements = document.getElementsByClass(<span class="string">&quot;gl-warp clearfix&quot;</span>);</span><br><span class="line"><span class="comment">//拿到上面文档集合中的第一个，并获取到标签名为li的节点集合</span></span><br><span class="line">        Elements lis = elements.get(<span class="number">0</span>).getElementsByTag(<span class="string">&quot;li&quot;</span>);</span><br><span class="line">        <span class="comment">//循环遍历li的节点集合</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; lis.size(); i++) &#123;</span><br><span class="line"><span class="comment">//拿到节点里的bookname</span></span><br><span class="line">            Element booknames = lis.get(i).getElementsByClass(<span class="string">&quot;p-name&quot;</span>).get(<span class="number">0</span>);</span><br><span class="line">            String bookname = booknames.getElementsByTag(<span class="string">&quot;em&quot;</span>).get(<span class="number">0</span>).text();</span><br><span class="line">            System.out.println(bookname);</span><br><span class="line"><span class="comment">//拿到节点里的img</span></span><br><span class="line">            Element elementsByClass = lis.get(i).getElementsByClass(<span class="string">&quot;p-img&quot;</span>).get(<span class="number">0</span>);</span><br><span class="line">            String img = elementsByClass.getElementsByTag(<span class="string">&quot;img&quot;</span>).get(<span class="number">0</span>).attr(<span class="string">&quot;data-lazy-img&quot;</span>);</span><br><span class="line">            System.out.println(img);</span><br><span class="line"><span class="comment">//拿到节点里的price</span></span><br><span class="line">            Element prices = lis.get(i).getElementsByClass(<span class="string">&quot;p-price&quot;</span>).get(<span class="number">0</span>);</span><br><span class="line">            String price = prices.getElementsByTag(<span class="string">&quot;i&quot;</span>).get(<span class="number">0</span>).text();</span><br><span class="line">            System.out.println(price);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>后续可以根据自己需求做不同的逻辑（比如把它封装成一个list，批量添加到es中）</p>]]></content>
      
      
      
        <tags>
            
            <tag> Jsoup 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ElasticSearch的初级安装使用</title>
      <link href="/2021/09/25/ElasticSearch%E7%9A%84%E5%88%9D%E7%BA%A7%E4%BD%BF%E7%94%A8/"/>
      <url>/2021/09/25/ElasticSearch%E7%9A%84%E5%88%9D%E7%BA%A7%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="ElasticSearch简单安装使用"><a href="#ElasticSearch简单安装使用" class="headerlink" title="ElasticSearch简单安装使用"></a><strong>ElasticSearch简单安装使用</strong></h2><hr><h3 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h3><p><a href="https://www.elastic.co/cn/what-is/elasticsearch">ElasticSearch官网</a></p><p>Elasticsearch 是一个分布式的开源搜索和分析引擎，适用于所有类型的数据，包括文本、数字、地理空间、结构化和非结构化数据</p><p>Elasticsearch 在 Apache Lucene 的基础上开发而成，支持Restful风格和多种语言调用</p><p>着重功能就是用来做<strong>数据的检索和分析</strong></p><ul><li><p><strong>应用程序搜索</strong></p></li><li><p>网站搜索</p></li><li><p>企业搜索</p></li><li><p><strong>日志处理和分析</strong></p></li><li><p>基础设施<strong>指标和容器监测</strong></p></li><li><p>应用程序性能监测</p></li><li><p>地理空间<strong>数据分析和可视化</strong></p></li><li><p>安全分析</p></li><li><p>业务分析</p></li></ul><h3 id="为什么要用ElasticSearch"><a href="#为什么要用ElasticSearch" class="headerlink" title="为什么要用ElasticSearch"></a>为什么要用ElasticSearch</h3><p>可能会有人问，我们mysql也能做数据的检索和分析，为什么还要用ElasticSearch？</p><p>对，mysql也能做数据的检索和分析，但是我们说术业有专攻。而mysql主要用于做数据的持久化存储与管理，也就是crud。如果我们真的使用mysql做海量数据的检索与分析，ElasticSearch更在行。</p><h4 id="为什么说mysql做海量数据的检索与分析没有ElasticSearch在行"><a href="#为什么说mysql做海量数据的检索与分析没有ElasticSearch在行" class="headerlink" title="为什么说mysql做海量数据的检索与分析没有ElasticSearch在行"></a>为什么说mysql做海量数据的检索与分析没有ElasticSearch在行</h4><p>mysql做数据的检索与分析时，需要将全部数据都遍历一遍，所以速度会更慢。</p><p>而ElasticSearch在做数据的检索与分析时，并不需要遍历全部数据，所以速度会更快。</p><p>（你肯定又想问为什么ElasticSearch不需要遍历所有数据，后面的一篇博客会详情讲，先提示一下（倒排索引））</p><h3 id="ElasticSearch的安装（Window）"><a href="#ElasticSearch的安装（Window）" class="headerlink" title="ElasticSearch的安装（Window）"></a>ElasticSearch的安装（Window）</h3><p>在安装ElasticSearch之前，必须安装JDK（最好安装JDK1.8版本及以上）</p><p>由于ElasticSearch 5.x 往后依赖于JDK 1.8的，所以现在我们下载JDK 1.8或者更高版本</p><p>我们会安装ElasticSearch、ElasticSearch-head插件（ElasticSearch可视化工具）、kibana(ElasticSearch可视化工具)</p><p><strong>最好是版本一致（避免版本冲突出错</strong>）、<strong>（我们这里是7.6.1版本）</strong></p><p>可以去官网找下载安装</p><p>也可以去阿里云盘下载、百度云盘</p><p><a href="https://www.aliyundrive.com/s/4PoSeda3iLd">阿里云盘下载地址</a></p><p><a href="https://pan.baidu.com/s/1PT3jLvCksOhq7kgAKzQm7g?from=init#list/path=%2F">狂神说资料下载地址</a></p><h4 id="解压三个压缩包即可"><a href="#解压三个压缩包即可" class="headerlink" title="解压三个压缩包即可"></a>解压三个压缩包即可</h4><h3 id="启动ElasticSearch及相关可视化工具"><a href="#启动ElasticSearch及相关可视化工具" class="headerlink" title="启动ElasticSearch及相关可视化工具"></a>启动ElasticSearch及相关可视化工具</h3><h4 id="1-找到ElasticSearch安装目录下的bin目录，双击elasticsearch-bat"><a href="#1-找到ElasticSearch安装目录下的bin目录，双击elasticsearch-bat" class="headerlink" title="1.找到ElasticSearch安装目录下的bin目录，双击elasticsearch.bat"></a>1.找到ElasticSearch安装目录下的bin目录，双击elasticsearch.bat</h4><p><img src="https://img-blog.csdnimg.cn/3d648c48c2004bf9b62cc83575553341.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA55Wq6IyE5ZGm5ZGm,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><p>打开浏览器输入<a href="http://localhost:9200/">http://localhost:9200</a>   看到以下画面则代表ElasticSearch已成功启动</p><p><img src="https://img-blog.csdnimg.cn/cc68f4288c2443b1ba837d5b5e8ab216.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA55Wq6IyE5ZGm5ZGm,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><h4 id="2-打开kibana安装目录下的bin目录，双击kibana-bat文件"><a href="#2-打开kibana安装目录下的bin目录，双击kibana-bat文件" class="headerlink" title="2.打开kibana安装目录下的bin目录，双击kibana.bat文件"></a>2.打开kibana安装目录下的bin目录，双击kibana.bat文件</h4><p><img src="https://img-blog.csdnimg.cn/4725f7a787824f41b35ae7420c018058.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA55Wq6IyE5ZGm5ZGm,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><p>打开浏览器输入<a href="http://localhost:5601看到以下画面则代表ElasticSearch已成功启动">http://localhost:5601看到以下画面则代表ElasticSearch已成功启动</a></p><p><img src="https://img-blog.csdnimg.cn/09f1d2ff26074cf296ca6cc1ef1e75b2.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA55Wq6IyE5ZGm5ZGm,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><h4 id="3-找到elasticsearch-head安装目录，执行npm-install（nodejs项目安装依赖）"><a href="#3-找到elasticsearch-head安装目录，执行npm-install（nodejs项目安装依赖）" class="headerlink" title="3.找到elasticsearch-head安装目录，执行npm install（nodejs项目安装依赖）"></a>3.找到elasticsearch-head安装目录，执行npm install（nodejs项目安装依赖）</h4><p>安装好之后再npm run start启动，,打开浏览器端口9100</p><p><strong>默认是打不开的（因为跨域）</strong></p><p>找到ElasticSearch安装目录下的config目录，打开elasticsearch.yml，在最后加上</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http.cors.enabled: <span class="keyword">true</span></span><br><span class="line">http.cors.allow-origin: <span class="string">&quot;*&quot;</span></span><br></pre></td></tr></table></figure><p><a href="http://localhost:9100看到以下画面">http://localhost:9100看到以下画面</a></p><p><img src="https://img-blog.csdnimg.cn/71a792ac36484db8a8bdaaf4e548f0e5.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA55Wq6IyE5ZGm5ZGm,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><p>至此，我们ElasticSearch、ElasticSearch-head、Kibana全部安装完成</p><p>下期介绍ElasticSearch的Restful风格做crud</p>]]></content>
      
      
      
        <tags>
            
            <tag> ElasticSearch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/09/12/hello-world/"/>
      <url>/2021/09/12/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
